<?xml version="1.0"?>

<!-- <robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" -->
<!-- xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" -->
<!-- xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" -->
<!-- xmlns:xacro="http://ros.org/wiki/xacro" -->
<!-- > -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <property name="M_PI" value="3.1415926535897931" />
  <property name="field_of_view" value="${1*M_PI/180}" />

  
  <xacro:macro name="psd_sensor" params="name parent *origin ros_topic update_rate min_range max_range ray_count visualize">

	<joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_link"/>
    </joint>


    <link name="${name}_link">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" rpy="0 ${90*M_PI/180} 0" />
        <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 ${90*M_PI/180} 0" />
        <geometry>
          <!--<box size="0.01 0.01 0.01" /> -->
          <mesh filename="package://cvg_sim_gazebo/meshes/psd_sensor/psd_sensor.stl" scale ="0.01 0.01 0.01" />
        </geometry>
		<material name="red">
            <color rgba="1 0 0 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 ${90*M_PI/180} 0" />
        <geometry>
      <box size="0.01 0.01 0.01" />
	  	  <mesh filename="package://cvg_sim_gazebo/meshes/psd_sensor/psd_sensor.stl" scale ="0.01 0.01 0.01"/>
        </geometry>
      </collision>
    </link>


    <gazebo reference="${name}_link">
      <sensor type="ray" name="${name}">
		<!-- Position the ray sensor based on the specification. Also rotate
       it by 90 degrees around the X-axis so that the <horizontal> rays
       become vertical -->

        <update_rate>${update_rate}</update_rate>
        <ray>
          <range>
            <min>${min_range}</min>
            <max>${max_range}</max>
            <resolution>0.01</resolution>
          </range>
          <scan>
            <horizontal>
              <samples>${ray_count}</samples> <!-- beams -->
			  <!-- Resolution is multiplied by samples to determine number of simulated beams vs interpolated beams. See: http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
           -->
			  <resolution>1</resolution>
              <min_angle>-${field_of_view/2}</min_angle>
              <max_angle>${field_of_view/2}</max_angle>
            </horizontal>
            <!-- <vertical> -->
            <!--   <samples>${ray_count}</samples> -->
            <!--   <min_angle>-${field_of_view/2}</min_angle> -->
            <!--   <max_angle>${field_of_view/2}</max_angle> -->
            <!-- </vertical> -->
          </scan>
        </ray>

        <plugin name="gazebo_ros_${name}_controller" filename="libhector_gazebo_ros_sonar.so">
          <gaussianNoise>0.000</gaussianNoise>
          <topicName>${ros_topic}</topicName>
          <frameId>${name}_link</frameId>
        </plugin>
		<visualize>${visualize}</visualize>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
